
Element             - yes: implemented - no: non implemented - ignored: conversion ignored 

all                 - no
annotation          - ignored  (possible conversion into sql comment)
any                 - no 
anyAttribute        - no     
appInfo             - ignored 
attribute           - yes 
attributeGroup      - no 
choice              - yes 
complexContent      - no 
complexType         - yes 
documentation       - ignored  (possible conversion into sql comment)
element             - yes 
extension           - yes 
field               - no  
group               - yes  
import              - yes 
include             - no 
key                 - ignored  (possible conversion into sql unique constraint)
keyref              - ignored  (possible conversion into sql foreign constraint)
list                - no 
notation            - no 
redefine            - no 
restriction         - yes 
schema              - yes 
selector            - no 
sequence            - yes 
simpleContent       - yes 
simpleType          - yes 
union               - yes 
unique              - ignored (possible conversion into sql unique constraint) 

enumeration         - yes 
fractionDigits      - yes 
length              - yes 
maxExclusive        - ignored (possible conversion into sql check constraint) 
maxInclusive        - ignored (possible conversion into sql check constraint) 
maxLength           - yes 
minExclusive        - ignored (possible conversion into sql check constraint)  
minInclusive        - ignored (possible conversion into sql check constraint) 
minLength           - ignored (possible conversion into sql check constraint) 
pattern             - ignored (possible conversion into sql check constraint)  
totalDigits         - yes 
whiteSpace          - ignored 


this xml types are non implemented:
gDay
gMonth
ENTITY
NOTATION
ENTITIES

    
in this xsd code:
	<xs:group name="e1-e2">
		<xs:sequence>
			<xs:element name="e1" type="xs:string" minOccurs="0"/>
			<xs:element name="e2" type="xs:string"/>
		</xs:sequence>
	</xs:group>
..
	<xs:choice>
		<xs:element name="e1" type="xs:string"/>
		<xs:group ref="e1-e2"/>
	</xs:choice>

the element 'e1' and 'e1-e2.e1' share the same xpath
the parser takes the element of the group 'e1-e2'



the classes have the first character of the names in lower case; is not a recommended perl for the user classes



